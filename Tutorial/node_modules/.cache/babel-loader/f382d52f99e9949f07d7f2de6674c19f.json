{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andre/React/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to Move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/andre/React/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","xIsNext","stepNumber","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n        <Square\n            value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n        />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i){\n        const history = this.state.history.slice(0, this.state.stepNumber +1);\n        const current = history[history.length -1];\n        const squares = current.squares.slice();\n        if(calculateWinner(squares) || squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n    jumpTo(step){\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step,move) => {\n        const desc = move ?\n            'Go to Move #' + move :\n            'Go to game start';\n        return (\n            <li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>\n        );\n    });\n\n  let status;\n  if (winner) {\n      status = 'Winner: ' + winner;\n  }else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n  }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\n"]},"metadata":{},"sourceType":"module"}